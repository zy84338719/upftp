name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: 1.21

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Run tests
      run: make test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 获取完整的git历史用于版本标签
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: make deps
      
    - name: Build all platforms
      run: make build-all
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Download dependencies
      run: make deps
      
    - name: Create release packages
      run: make package
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: UPFTP ${{ github.ref_name }}
        body: |
          ## 🚀 UPFTP ${{ github.ref_name }}
          
          ### 下载说明
          
          请根据您的操作系统选择对应的版本：
          
          #### Linux
          - `upftp_${{ github.ref_name }}_linux_amd64.tar.gz` - Linux 64位 (Intel/AMD)
          - `upftp_${{ github.ref_name }}_linux_arm64.tar.gz` - Linux ARM64 (如树莓派等)
          
          #### macOS
          - `upftp_${{ github.ref_name }}_darwin_amd64.tar.gz` - macOS Intel 处理器
          - `upftp_${{ github.ref_name }}_darwin_arm64.tar.gz` - macOS Apple Silicon (M1/M2)
          
          #### Windows
          - `upftp_${{ github.ref_name }}_windows_amd64.zip` - Windows 64位
          - `upftp_${{ github.ref_name }}_windows_386.zip` - Windows 32位
          
          ### 快速开始
          
          1. 下载对应平台的压缩包
          2. 解压缩文件
          3. 在终端中运行程序
          
          ```bash
          # Linux/macOS
          ./upftp
          
          # Windows
          upftp.exe
          ```
          
          ### 新特性
          - 🌐 现代化Web界面
          - 🎥 视频和音频文件预览
          - 📁 FTP服务器支持
          - 🔍 实时文件搜索
          - 📱 移动设备适配
          
          完整文档请查看 [INSTALL.md](INSTALL.md)
          
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      run: |
        for file in releases/*; do
          echo "Uploading $file"
          gh release upload ${{ github.ref_name }} "$file"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
